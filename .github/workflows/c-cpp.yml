name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          sudo apt-get install -y build-essential cmake

      - name: Download and build LLVM
        run: |
          # Set LLVM version
          LLVM_VERSION=19
          LLVM_SRC=https://github.com/llvm/llvm-project/releases/download/llvmorg-${LLVM_VERSION}.0/llvm-${LLVM_VERSION}.0.src.tar.xz
          LLVM_BUILD_DIR=llvm-build

          # Download LLVM source
          wget $LLVM_SRC -O llvm-${LLVM_VERSION}.0.src.tar.xz
          tar -xf llvm-${LLVM_VERSION}.0.src.tar.xz
          mkdir $LLVM_BUILD_DIR
          cd $LLVM_BUILD_DIR

          # Configure and build LLVM as a static library
          cmake ../llvm-${LLVM_VERSION}.0.src -DLLVM_ENABLE_PROJECTS="clang" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF
          make -j$(nproc)

      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DLLVM_INCLUDE_DIRS=../llvm-build/include -DLLVMC_INCLUDE_DIRS=../llvm-build/include/llvm-c -DCMAKE_CXX_FLAGS="-static"
          make -j$(nproc)
          mv dcc ../dcc-x86_64
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dcc-artifact-x86_64
          path: dcc-x86_64

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dcc-artifact-x86_64

      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-release
          name: 'Nightly Release'
          body: |
            Automated nightly release for commit ${{ github.sha }}. This release contains all of the newest features. Not intended for use unless you're a developer
          files: |
            ./dcc-x86_64
